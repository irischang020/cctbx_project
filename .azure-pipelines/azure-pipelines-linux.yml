# Script for building CCTBX

jobs:
- job: linux_64
  pool:
    vmImage: ubuntu-16.04
  timeoutInMinutes: 360
  dependsOn: syntax
  strategy:
    maxParallel: 3
    matrix:
      python2.7:
        OS: linux-64
        PYTHON_VERSION: py27
      python3.6:
        OS: linux-64
        PYTHON_VERSION: py36
  container:
    image: centos:6.10
    options: "--name ci-container -v /usr/bin/docker:/tmp/docker:ro"

  steps:
  # https://github.com/ApexAI/performance_test/blob/master/azure-pipelines.yml#L9-L17
  - script: |
      /tmp/docker exec -t -u 0 ci-container \
      sh -c "yum install -y sudo"
    displayName: Set up sudo

  - script: |
      sudo yum groupinstall -y 'Development Tools'
      sudo yum install -y python-argparse mesa-libGLU-devel mesa-libGL-devel
    displayName: Install dependencies

  - script: |
      echo "Installing Miniconda"
      set -x -e
      curl -o $(Build.StagingDirectory)/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      bash $(Build.StagingDirectory)/miniconda.sh -b -u -p $(Build.StagingDirectory)/miniconda
      export PATH=$(Build.StagingDirectory)/miniconda/bin:$PATH
      echo "Setting up Conda environment"
    displayName: Install miniconda

  - checkout: self
    path: ./modules/cctbx_project

  - script: |
      git checkout py3
      cd ../..
      ln -s modules/cctbx_project/libtbx/auto_build/bootstrap.py
    displayName: Check out py3 branch / Link bootstrap.py

  # - script: echo "##vso[task.prependpath]$CONDA/bin"
  #   displayName: Add conda to PATH

  - script: |
      source $(Build.StagingDirectory)/miniconda/etc/profile.d/conda.sh
      conda create -y -n ${PYTHON_VERSION} --file ./libtbx/auto_build/conda_envs/cctbx_${PYTHON_VERSION}_${OS}.txt
      conda install -y -c conda-forge -n ${PYTHON_VERSION} junit-xml
    displayName: Create conda environment

  - script: |
      cd ../..
      python bootstrap.py hot update --builder=cctbx
    displayName: Download sources

  - script: |
      source $(Build.StagingDirectory)/miniconda/etc/profile.d/conda.sh
      conda activate ${PYTHON_VERSION}
      cd ../..
      python bootstrap.py build --builder=cctbx --use-conda --nproc=4
      cd build
      source setpaths.sh
      libtbx.configure cma_es fable rstbx simtbx spotfinder cbflib_adaptbx
      make -j 4
      make -j 4
    displayName: Configure and Build

  - script: |
      source $(Build.StagingDirectory)/miniconda/etc/profile.d/conda.sh
      conda activate ${PYTHON_VERSION}
      cd ../..
      source ./build/setpaths.sh
      mkdir tests
      cd tests
      libtbx.run_tests_parallel module=boost_adaptbx module=cctbx module=cma_es \
        module=fable module=gltbx module=iotbx module=libtbx module=rstbx \
        module=scitbx module=simtbx module=smtbx module=spotfinder \
        module=annlib_adaptbx module=cbflib_adaptbx \
        nproc=4
    failOnStderr: false
    continueOnError: true
    displayName: Test

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/output.xml'
